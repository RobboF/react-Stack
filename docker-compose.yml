version: '3'
services:
  mongo:
    image: mongo
    volumes:
    - mongodbdata:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example1
    ports: 
      - "27017:27017"
    networks:
      backend:
        aliases:
          - mongo
    command: mongod --replSet "rs" --auth --bind_ip_all

  express:
    image: "node:alpine"
    working_dir: /usr/src/app
    volumes:
      - ./data/express:/usr/src/app
    expose:
      - "9000"
    depends_on:
      - "mongo"
    networks:
      backend:
        aliases:
          - express
      frontend:
        aliases:
          - express
    command: "npm start"
  
  react:
    image: "react:v2"
    working_dir: /usr/src/my-app
    volumes:
      - ./data/react/my-app:/usr/src/my-app
    ports:
      - "3000:3000"
    depends_on:
      - "express"
    networks: 
      frontend:
        aliases:
          - react
    command: "npm start"
  
  nginx:
    image: nginx:1.15-alpine
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - "react"
    networks:  
      frontend:
          aliases:
            - nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    

volumes:
  mongodbdata:

networks:
  backend:
  frontend:
    # external: true