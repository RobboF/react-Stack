version: '3'
services:
  mongo:
    image: mongo
    volumes:
    - mongodbdata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example1
    ports: 
      - "27017:27017"
    networks:
      backend:
        aliases:
          - mongo
    command: mongod --replSet "rs" --auth --bind_ip_all

  express:
    image: "node:alpine"
    working_dir: /usr/src/app
    volumes:
      - ./data/express:/usr/src/app
    depends_on:
      - "mongo"
    networks:
      backend:
        aliases:
          - express
      frontend:
        aliases:
          - express
    command: "npm start"
  
  react:
    image: "robbof/react:v2"
    working_dir: /usr/src/my-app
    volumes:
      - ./data/react/my-app:/usr/src/my-app
    ports:
      - "3000:3000"
    depends_on:
      - "express"
    labels:
      - traefik.enable=true
      - "traefik.frontend.rule=Host:robbo.xyz"
      - "traefik.port=3000"
      - "traefik.frontend.passHostHeader=false"
    networks: 
      frontend:
        aliases:
          - react
    command: "npm start"
  
  traefik:
    image: traefik:alpine
    ports: 
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ./data/traefik/traefik.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/traefik/acme.json:/etc/traefik/acme/acme.json
    networks:
      backend:
        aliases:
          - traefik
      frontend:
        aliases:
          - traefik
  

  whoami:
    image: emilevauge/whoami
    labels:
      - traefik.enable.true
      - "traefik.frontend.rule=Host:whoami.docker.localhost"

      
  # nginx:
  #   image: nginx:1.15-alpine
  #   volumes:
  #     - ./data/nginx:/etc/nginx/conf.d
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - "react"
  #   networks:  
  #     frontend:
  #         aliases:
  #           - nginx
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    

volumes:
  mongodbdata:

networks:
  backend:
  frontend:
    # external: true